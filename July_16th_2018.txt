https://www.pythonforbeginners.com/files/reading-and-writing-files-in-python

import nltk

f = open('output.txt')
raw = f.read() 






This is more explicit than necessary, but does what you want.

with open("file.txt", "r") as ins:
    array = []
    for line in ins:
        array.append(line)
		
============================================================================================================

from nltk.tokenize import RegexpTokenizer
from stop_words import get_stop_words
from nltk.stem.porter import PorterStemmer
from gensim import corpora, models
import gensim

tokenizer = RegexpTokenizer(r'\w+')

# create English stop words list
en_stop = get_stop_words('en')

# Create p_stemmer of class PorterStemmer
p_stemmer = PorterStemmer()
    
# create sample documents

f = open('sports.txt')
doc_a = f.read() 

f = open('lifestyle.txt')
doc_b = f.read() 

f = open('finance.txt')
doc_c = f.read() 


# compile sample documents into a list
doc_set = [doc_a, doc_b, doc_c]

# list for tokenized documents in loop
texts = []

# loop through document list
for i in doc_set:
    
    # clean and tokenize document string
    raw = i.lower()
    tokens = tokenizer.tokenize(raw)

    # remove stop words from tokens
    stopped_tokens = [i for i in tokens if not i in en_stop]
    
    # stem tokens
    stemmed_tokens = [p_stemmer.stem(i) for i in stopped_tokens]
    
    # add tokens to list
    texts.append(stemmed_tokens)

# turn our tokenized documents into a id <-> term dictionary
dictionary = corpora.Dictionary(texts)
    
# convert tokenized documents into a document-term matrix
corpus = [dictionary.doc2bow(text) for text in texts]

# generate LDA model
ldamodel = gensim.models.ldamodel.LdaModel(corpus, num_topics=2, id2word = dictionary, passes=20)

print(ldamodel.print_topics(num_topics=2, num_words=3))

print(ldamodel)
====================================================================================================================================


  
 1)mkdir anaconda
 
 2)wget https://repo.anaconda.com/archive/Anaconda2-5.2.0-Linux-x86_64.sh
 
 3) sudo bash Anaconda2-5.2.0-Linux-x86_64.sh
 
 
 
import nltk
nltk.download('punkt')

pip install --upgrade nltk
 

 
 **** 
 16-07-2018
 
 NER-[NAMED ENTITY RECOGNIZATION] IMPLEMENTATION USING STANDFORD-FULL USING PYTHON 2.7
 
 https://pythonprogramming.net/named-entity-recognition-stanford-ner-tagger/
 
 https://pythonprogramming.net/testing-stanford-ner-taggers-for-accuracy/?completed=/named-entity-recognition-stanford-ner-tagger/
 
 
 wget https://nlp.stanford.edu/software/stanford-ner-2018-02-27.zip
 
 
 
 
 /home/sai1/examples/stanford-ner-2018-02-27/classifiers/english.all.3class.distsim.crf.ser.gz
 
 /home/sai1/examples/stanford-ner-2018-02-27/stanford-ner.jar
 
 
 
 
 
 
 
 
 